@import url("https://fonts.googleapis.com/css?family=Montserrat:400,600,700");
/**
 * @file
 *** FOUNDATION FOR SITES AND CUSTOM MIXINS
 */
/**
 * @group Foundation for Sites mixins
 * Mixins placeholder file
 * @todo These are mostly from Foundation and should be removed and used straight from Foundation.
 */
.clearfix:before, .clearfix:after {
  content: " ";
  display: table;
}
.clearfix:after {
  clear: both;
}

/**
 * Horizontally or vertically aligns the items within a flex container.
 *
 * @param {Keyword} $x [null] - Horizontal alignment to use. Can be `left`,
 * `right`, `center`, `justify`, or `spaced`. Or, set it to `null`
 * (the default) to not set horizontal alignment.
 * @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`,
 * `bottom`, `middle`, or `stretch`. Or, set it to `null` (the default) to not
 * set vertical alignment.
 */
/**
 * Vertically align a single column within a flex row. Apply this mixin to a
 * flex column.
 *
 * @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`,
 * `bottom`, `middle`, or `stretch`. Or, set it to `null` (the default) to not
 * set vertical alignment.
 */
/**
 * Changes the source order of a flex child. Children with lower numbers appear
 * first in the layout.
 *
 * @param {Number} $order [0] - Order number to apply.
 */
/**
 * Change flex-direction
 *
 * @param {Keyword} $direction [row] - Flex direction to use. Can be
 * - row (default): same as text direction
 * - row-reverse: opposite to text direction
 * - column: same as row but top to bottom
 * - column-reverse: same as row-reverse top to bottom
 */
/**
 * @include flex-wrap(nowrap | wrap | wrap-reverse);
 * Default: nowrap
 */
/**
 * @include flex-flow(values);
 * Default: row nowrap
 */
/**
 * @include order(int);
 * Default: 0
 */
/**
 * @include flex-grow(int);
 * Default: 1
 */
/**
 * @include flex-shrink(int);
 * Default: 0
 */
/**
 * @include flex-basis(int);
 * Default: auto
 */
/**
 * @include justify-content(flex-start | flex-end | center | space-between
 * | space-around);
 * Default: flex-start
 */
/**
 * @include align-items(flex-start | flex-end | center | baseline | stretch);
 * Default: stretch
 */
/**
 * @include align-self(auto | flex-start | flex-end | center | baseline | stretch);
 * Default: auto
 */
/**
 * @include align-content(flex-start | flex-end | center | space-between | space-around | stretch);
 * Default: stretch
 */
.footer {
  margin-top: 2rem;
}
.footer__content {
  border-top: 1px solid #62b3e5;
  font-size: 0.875rem;
  color: #999999;
}

.footer__item {
  line-height: 100px;
}
.footer__item--logo {
  display: inline-block;
  height: 100px;
}
@media (min-width: 576px) {
  .footer__item--logo {
    float: right;
  }
}

.footer .block {
  padding: 1rem 0;
}
.footer .dropdown-menu {
  font-size: 0.875rem;
}
.footer a {
  color: #999999;
}
.footer a:hover {
  text-decoration: underline;
}
@media (min-width: 576px) {
  .footer {
    text-align: left;
  }
}

.region-help > .glyphicon {
  font-size: 1.25rem;
  float: left;
  margin: -0.05em 0.5em 0 0;
}
.region-help .block {
  overflow: hidden;
}

.region-secondary-navigation {
  background-color: #f5f5f5;
  padding: 7px 20px;
  margin-bottom: 20px;
}
.region-secondary-navigation .region--inner {
  max-width: 1300px;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.path-collections .region-secondary-navigation {
  background-color: #fff;
  margin-top: 40px;
  margin-bottom: 43px;
}
.path-collections .region-secondary-navigation .region--inner {
  justify-content: flex-start;
}

/* .path-collection-view {
  main.container,
  footer.container {
    width: 100%;
  }
  .media_collection--buttons {
    max-width: 1300px;
    margin: 0 auto;;
  }
} */
/*# sourceMappingURL=regions.css.map */
